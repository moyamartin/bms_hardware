

//AYUDAS TIMERS

//TASSELx   - BITS DE SELECCION DE FUENTE DE CLOCK   (Timer A Source SELection bit x)
//SMLCK - timer del sistema Aprox 1MHz 
//TACTL  - Timer A ConTroL register   - Este registro contiene a TASSELS y otros valores como MC y ID 


//En caso de que el timer A sea usado por el pwm de contro de corriente, utilizar Timer B reemplazando la letra A por B en los registros como TACCR0 por TBCCR0
TBCCR0 = 50 – 1;   // la frecuencia del PWM será  1*e^6 / 50 = 20 kHz
TBCTL = TASSEL_2 + MC_1;    // Este es el modo de funcionamiento de timer, MC_1  ,el contador se resetea al alcanzar el valor almacenado en CCR0 ademas usa como disparo de cuentas el Clock de sistema aprox 1 MHz




**************************************************************************


#include "msp430G2553.h"

void main(void)
{
 WDTCTL = WDTPW + WDTHOLD;  // Stop WDT

 //Eleccion y configuración de pines I/O  -  Pin 10 TA1.0 (PWM_COOLER Out)  //  Pin 5   A3 (Temperatura de Disipador)

    //ENTRADA ANALOGICA A3
        P1DIR |= BIT3;         //Seteo P1DIR.3 = 1    
        P1SEL |= BIT3;         //Seteo P1SEL.3 = 1 

    //Salida como salida asociada a timer A1 - SALIDA UTILIZADA PARA PWM COOLER

        P2SEL |= BIT0;       //Seteo P2DIR.0 = 1 


//Calculo del duty cicle y del periodo de PWM COOLER

    TACCR0 = 50-1;             // PWM Period - la frecuencia del PWM será  1*e^6 / 50 = 20 kHz
    TACCTL1 = OUTMOD_7;          // CCR1 reset/set
    TACCR1 = 5;                // CCR1 - Calculo del PWM duty cycle = (TACCR1/TACCR0)*100%  - ---> este a futuro deberá ser calculado mediante la temperatura del disipador
    TACTL = TASSEL_2 + MC_1;   // SMCLK, up mode - Se setean los bits de la palabra de control TA1CTL con esta instruccion

}